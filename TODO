

(3) Go into the program final.c and see code priorities there
(5) Get statistics/graphs based on areas the boxes are in/direction of travel

- write script to save all frames after fullTest

- add weights (number of pixels in a box) as an additional attribute
- use weights to properly calculate the centroids when we are merging boxes

- tweak threshold values a little bit to capture similar colored pants

- copy changes to bounding box structure to the peopleCounterCUDA and peopleCounterOMP
    --> use copyFrameTestCUDA and copyFrameTest with the header file changed to peopleCounterOMP to test the structure was updated (and add update to the initialization values)

- to get the timing code, run ./doTesh.sh and use 'grep time.= result*.txt' to extract timing results

############################# 
COMPLETED ITEMS BELOW
=============================


- fix mergeBoxes to loop until no more boxes need to be merged



(1) Write a test program (under test files) to test the function
drawBoxOnImage.  You can use another of the test programs (in the tests
folder) as your template.  You can also copy the Makefile call to compile
your program within the Makefile of a previous test.  Use the header file as
a guide for which functions to call in order to load images and save them.  


(2) Fix bugs in drawBoxOnImage



(3) Subtract the frames and perform an appropriate threshold using the
subtracted frames.  Create a script which will save all the frames into a
jpg (be sure that the jpg name includes both the filename and a tag to say
it was thresholded).  And of course, don't overwrite the images we have in
the directory.  

(4) Write a test program (under test files) to test the function
blobDetection.  Take in the thresholded image from part 3 and then call blob
detection.  Use your fixed function from part 2 to create an image where we
can see the blobs and save the image for viewing.  

(5) Fix bugs in blobDetection


(4) Be sure to write test code to test your functions.
